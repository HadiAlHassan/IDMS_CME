# Generated by Django 4.1.13 on 2024-07-10 09:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import djongo.models.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('firebase_uid', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'user',
                'ordering': ['-date_joined'],
            },
        ),
        migrations.CreateModel(
            name='CategoryDocumentCount',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=100, unique=True)),
                ('document_count', models.IntegerField()),
            ],
            options={
                'db_table': 'category_document_count',
            },
        ),
        migrations.CreateModel(
            name='DocGeneralInfo',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('general_info_id', models.IntegerField(unique=True)),
                ('date_submitted', models.DateTimeField(auto_now_add=True)),
                ('source', models.TextField()),
                ('title', models.TextField()),
                ('author', models.TextField()),
                ('nlp_id', models.IntegerField(unique=True)),
            ],
            options={
                'db_table': 'general_info',
            },
        ),
        migrations.CreateModel(
            name='NlpAnalysis',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('document_type', models.CharField(max_length=100)),
                ('summary', models.TextField()),
                ('category', models.CharField(choices=[('Contract', 'Contract'), ('Technology', 'Technology'), ('Politics', 'Politics'), ('Court Case', 'Business'), ('Agreement', 'Agreement'), ('Sport', 'Sport'), ('Business', 'Business'), ('Other', 'Other')], max_length=100)),
                ('language', models.TextField()),
                ('ner', djongo.models.fields.JSONField()),
                ('confidentiality_level', models.BooleanField()),
                ('references', djongo.models.fields.JSONField()),
                ('in_text_citations', djongo.models.fields.JSONField()),
                ('word_count', models.IntegerField()),
                ('nlp_id', models.OneToOneField(db_column='nlp_id', on_delete=django.db.models.deletion.CASCADE, to='api.docgeneralinfo', to_field='nlp_id')),
            ],
            options={
                'db_table': 'nlp_analysis',
            },
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('client', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=255)),
                ('time', models.DateField()),
                ('documents_related', djongo.models.fields.JSONField(default=list)),
                ('trial_date', models.DateField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cases', to=settings.AUTH_USER_MODEL, to_field='firebase_uid')),
            ],
        ),
    ]
